@import 'helperMixins.scss';
@import 'helperVars.scss';
@import 'mainModule.scss';
//https://github.com/sass/libsass/issues/353









body{
    font-family: 'Orbitron', sans-serif;
    background: linear-gradient(#303030, #444444 45%,  #444444 55%, #303030 );
    height:100%;
    background-repeat: no-repeat;
    background-attachment: fixed; //makes it so that when you scroll, background will not
}

$curtain_size:400px;
#bottom-left-curtain{

    @include setSizeAndPosition(
        $curtain_size, 
        $curtain_size, 
        absolute, 
        -300px, 
        0, 
        null, 
        null,
        null
    );

    background: linear-gradient(45deg,  $colorBlue, $colorBlue 90%,  $colorBlueLighten1);
    &::after{
        content:"";
        display:block;
        @include setSizeAndPosition($curtain_size, $curtain_size, absolute, $curtain_size, 0, null, null, null);
        background: linear-gradient(45deg,  $colorBlue, $colorBlue 40%,  $colorBlueLighten1 50%, rgba(0,0,0,0) 50%, rgba(0,0,0,0));
    }
    @include customAnimationFrames(bottom-left-curtain, $triangle-animation-time, $quick-ease-in, 1, $zano-container-animation-time + $triangle-animation-time, forwards);

    &.animate-out{
        @include customAnimationFrames(open-left-curtain, $triangle-animation-time + 500ms, $quick-ease-in, 1, null, forwards);
    }

    &.animate-in{
        @include customAnimationFrames(close-left-curtain, $triangle-animation-time + 500ms, $quick-ease-in, 1, null, forwards);
    }
}

@include customKeyFrames(open-left-curtain){
    100%{left:-500px;}
}

@include customKeyFrames(close-left-curtain){
    0%{left:-500px;}
    100%{left:-300px;}
}

#top-right-curtain{

    @include setSizeAndPosition($curtain_size, $curtain_size, absolute, null, 0, -300px, null,null);
    background: linear-gradient(45deg,  $colorBlueLighten1, $colorBlue 10%, $colorBlue);
    &::before{
        content:"";
        display:block;
        @include setSizeAndPosition($curtain_size, $curtain_size, absolute, null, 0, $curtain_size, null,null);
        background: linear-gradient(45deg, rgba(0,0,0,0), rgba(0,0,0,0) 50%, $colorBlueLighten1 50%,  $colorBlue 60%, $colorBlue);
    }

    @include customAnimationFrames(top-right-curtain, $triangle-animation-time, $quick-ease-in, 1, $zano-container-animation-time + $triangle-animation-time, forwards);

    &.animate-out{
        @include customAnimationFrames(open-right-curtain, $triangle-animation-time + 500ms, $quick-ease-in, 1, null, forwards);
    }

    &.animate-in{
        @include customAnimationFrames(close-right-curtain, $triangle-animation-time + 500ms, $quick-ease-in, 1, null, forwards);
    }
}
@include customKeyFrames(open-right-curtain){
    100%{right:-500px;}
}

@include customKeyFrames(close-right-curtain){
    0%{right:-500px;}
    100%{right:-300px;}
}



$triangleSize:300px;
#bottom-left-triangle{
    @include setSizeAndPosition($triangleSize, $triangleSize, absolute, -1 *$triangleSize, null, null, -1 *$triangleSize, null);
    background: linear-gradient(45deg, #303030, $colorBlueDarken2 20%,  $colorBlueDarken1 49%, $colorBlueLighten1 50%, rgba(0,0,0,0) 50%, rgba(0,0,0,0));
    
    &.animate-in{
        @include customAnimationFrames(bottom-left-triangle, $triangle-animation-time, $quick-ease-in, 1, null, forwards);
    }
}

@include customKeyFrames(bottom-left-triangle){
    100%{
        left:0;
        bottom:0;
    }
}

#top-right-triangle {
    @include setSizeAndPosition($triangleSize, $triangleSize, absolute, null, -1 *$triangleSize, -1 * $triangleSize, null, null);
    background: linear-gradient(45deg, rgba(0,0,0,0), rgba(0,0,0,0) 50%, $colorBlueLighten1 50%, $colorBlueDarken1 51%, $colorBlueDarken2 80%, #303030);
   
    &.animate-in{
        @include customAnimationFrames(top-right-triangle, $triangle-animation-time, $quick-ease-in, 1, null, forwards);
    }   
}

@include customKeyFrames(top-right-triangle){
    100%{
        top:0;
        right:0;
    }
}


@include customKeyFrames(zoomZanoContainer) {
    0%{     
    @include setSizeAndPosition($mainContainerWidth, $mainContainerHeight, absolute, 50%, 100px, null, null, -1 * $mainContainerWidth/2);
   opacity:1;
    }
    50% {
    @include setSizeAndPosition(100%, 100%, absolute, 0, 0, 0, 0, 0);

    }
    100%{
        @include setSizeAndPosition(100%, 100%, absolute, 0, 0, 0, 0, 0);
        opacity:0;
    }
}


#menu {
    opacity: 0;
    color: white;
    position: absolute;
    top: 200px;
    $indent: 30px;

    @include customAnimationFrames(menu-items-intro, 1s, $quick-ease-in, 1, $zano-container-animation-time + $triangle-animation-time, forwards);

    & ul {
        list-style-type: none;
        padding-left: 20px;
    }

    .item1, .item2, .item3, .item4 {
        margin-bottom: 20px;
        -moz-transition: transform 500ms, color 500ms;
        -o-transition: transform 500ms, color 500ms;
        -webkit-transition: transform 500ms, color 500ms;
        transition: transform 500ms, color 500ms;
        position: relative;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;

        &:hover {
            cursor: pointer;
 
            -moz-transform: translateX(-1px);
            -ms-transform: translateX(-1px);
            -o-transform: translateX(-1px);
            -webkit-transform: translateX(-1px);
            transform: translateX(-1px);
            color: $colorBlueLighten2;
        }
    }

    .item1 {
        padding-left: $indent * 0;
    }

    .item2 {
        padding-left: $indent * 1;
    }

    .item3 {
        padding-left: $indent * 2;
    }

    .item4 {
        padding-left: $indent * 3;
    }
}

@include customKeyFrames(menu-items-intro){
    100%{
        opacity:1;
    }
}

#current-page{
    color:white;
    padding:10px;
}



.staggerAnimation.ng-enter,
.staggerAnimation.ng-leave,
.staggerAnimation.ng-move {
  -webkit-transition:0.5s cubic-bezier(.08,.84,.48,.99) all;
  transition:0.5s cubic-bezier(.08,.84,.48,.99) all;
}


.staggerAnimation.ng-enter-stagger {
  /* 50ms between each item being animated after the other */
  -webkit-transition-delay:200ms;
  transition-delay:200ms;

  /* this is required here to prevent any CSS inheritance issues */
  -webkit-transition-duration:0;
  transition-duration:0;
}


/* ending enter and move styling
   (this is what the element will animate from */
.staggerAnimation.ng-enter{ 
    opacity:0; 
    margin-left:-10px;
}

/* ending enter and move styling
   (this is what the element will animate towards */
.staggerAnimation.ng-enter.ng-enter-active { 
    opacity:1; 
    margin-left:0px;
}

/* starting leave animation */
.staggerAnimation.ng-leave { opacity:0; }

/* ending leave animation */
.staggerAnimation.ng-leave.ng-leave-active { opacity:0; }

.random-numbers li{color:white;}

.projectsStagger.ng-enter {
    -moz-transition: 0.5s $quick-ease-in all;
    -o-transition: 0.5s $quick-ease-in all;
    -webkit-transition: 0.5s $quick-ease-in all;
    transition: 0.5s $quick-ease-in all;
    opacity:0;
    margin-left:-10px;
}

.projectsStagger.ng-enter-stagger{
    transition-delay:100ms;
    transition-duration:0;
}

.projectsStagger.ng-enter.ng-enter-active{
    opacity:1;
    margin-left:0;
}

.project-list{ 
    list-style-type:none;
    padding:0;
    & li{height:50px;}
}

#perspective-container{
    perspective:1000px;
    position:absolute;
    left:0;
    right:0;
    bottom:0;
    top:0;
}

#buttons-container{
    position:relative;
    z-index:1000;
}

